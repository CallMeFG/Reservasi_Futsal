package manajemen.view;

import manajemen.controller.FutsalController;
import manajemen.model.Booking;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormLaporanBooking extends javax.swing.JFrame {

    /**
     * Creates new form FormLaporanBooking
     */
    public FormLaporanBooking() {
        initComponents();
        // Saat pertama kali dibuka, panggil controller untuk mendapatkan SEMUA booking
        FutsalController controller = new FutsalController();
        loadLaporan(controller.getAllBookings());
    }

    // Method ini sekarang menerima List sebagai parameter
    private void loadLaporan(List<Booking> daftarBooking) {
        DefaultTableModel model = new DefaultTableModel();

        // --- PERUBAHAN 1: TAMBAHKAN KOLOM BARU ---
        model.addColumn("ID Booking");
        model.addColumn("Tgl Main");
        model.addColumn("Jam Mulai");
        model.addColumn("Jam Selesai"); // <-- Kolom Baru
        model.addColumn("Durasi (Jam)"); // <-- Kolom Baru
        model.addColumn("Pelanggan");
        model.addColumn("Lapangan");
        model.addColumn("Harga");
        model.addColumn("Status Bayar");
        // -----------------------------------------

        for (Booking booking : daftarBooking) {
            // --- PERUBAHAN 2: HITUNG JAM SELESAI ---
            LocalTime jamMulai = booking.getJamMulai().toLocalTime();
            int durasi = booking.getDurasiJam();
            LocalTime jamSelesai = jamMulai.plusHours(durasi);
            // ----------------------------------------

            model.addRow(new Object[]{
                booking.getBookingId(),
                booking.getTanggalMain(),
                jamMulai, // Tampilkan jam mulai
                jamSelesai, // Tampilkan jam selesai yang sudah dihitung
                durasi, // Tampilkan durasi
                booking.getPelanggan().getNamaLengkap(),
                booking.getLapangan().getJenisLapangan(),
                booking.getTotalHarga(),
                booking.getStatusPembayaran()
            });
        }
        tblLaporan.setModel(model);
    }

    /**
     * Method ini adalah satu-satunya sumber kebenaran untuk me-refresh data
     * tabel. Ia akan mengecek apakah filter tanggal diisi atau tidak.
     */
    private void refreshLaporan() {
        String tglMulaiStr = txtTanggalMulai.getText();
        String tglSelesaiStr = txtTanggalSelesai.getText();

        FutsalController controller = new FutsalController();
        List<Booking> daftarBooking;

        // Cek jika kedua field tanggal terisi
        if (!tglMulaiStr.isEmpty() && !tglSelesaiStr.isEmpty()) {
            try {
                // Jika terisi, gunakan method controller dengan filter tanggal
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                java.sql.Date tglMulai = new java.sql.Date(sdf.parse(tglMulaiStr).getTime());
                java.sql.Date tglSelesai = new java.sql.Date(sdf.parse(tglSelesaiStr).getTime());
                daftarBooking = controller.getBookingsByDateRange(tglMulai, tglSelesai);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(this, "Format tanggal salah. Gunakan format YYYY-MM-DD.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Hentikan jika format salah
            }
        } else {
            // Jika kosong, gunakan method controller untuk mengambil SEMUA data
            daftarBooking = controller.getAllBookings();
        }

        // Panggil method loadLaporan dengan data yang sesuai
        loadLaporan(daftarBooking);
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        // Saat jendela dibuka, langsung panggil method refresh utama
        refreshLaporan();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTanggalMulai = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTanggalSelesai = new javax.swing.JTextField();
        btnTampilkan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLaporan = new javax.swing.JTable();
        btnKembali = new javax.swing.JButton();
        btnTandaiLunas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Laporan Transaksi Booking - Manajemen Futsal");
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Filter Laporan Dari Tanggal :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));
        jPanel1.add(txtTanggalMulai, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 140, -1));

        jLabel2.setText("Sampai Tanggal                  :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 150, -1));
        jPanel1.add(txtTanggalSelesai, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 140, -1));

        btnTampilkan.setText("Tampilkan");
        btnTampilkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanActionPerformed(evt);
            }
        });
        jPanel1.add(btnTampilkan, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, -1));

        tblLaporan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLaporan);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 630, 390));

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });
        jPanel1.add(btnKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 550, -1, -1));

        btnTandaiLunas.setText("Tandai Lunas");
        btnTandaiLunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTandaiLunasActionPerformed(evt);
            }
        });
        jPanel1.add(btnTandaiLunas, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 550, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTampilkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanActionPerformed
        // Tombol ini sekarang hanya bertugas memanggil method refresh utama
        refreshLaporan();
    }//GEN-LAST:event_btnTampilkanActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        this.dispose(); // Cukup tutup jendela laporan ini
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnTandaiLunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTandaiLunasActionPerformed
        // 1. Dapatkan baris yang dipilih dari tabel
        int selectedRow = tblLaporan.getSelectedRow();

        // 2. Pastikan ada baris yang dipilih
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih data booking yang akan diubah statusnya.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 3. Ambil ID Booking dan status saat ini dari tabel
        String bookingId = tblLaporan.getValueAt(selectedRow, 0).toString();
        String statusSaatIni = tblLaporan.getValueAt(selectedRow, 6).toString();

        // 4. Jika statusnya sudah "Lunas", beri pemberitahuan dan hentikan proses
        if (statusSaatIni.equals("Lunas")) {
            JOptionPane.showMessageDialog(this, "Status booking ini sudah lunas.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // 5. Minta konfirmasi kepada pengguna
        int confirm = JOptionPane.showConfirmDialog(this,
                "Ubah status booking " + bookingId + " menjadi 'Lunas'?",
                "Konfirmasi Pembayaran",
                JOptionPane.YES_NO_OPTION);

        // 6. Jika pengguna setuju, panggil controller
        if (confirm == JOptionPane.YES_OPTION) {
            FutsalController controller = new FutsalController();
            boolean sukses = controller.updateStatusPembayaran(bookingId, "Lunas");

            if (sukses) {
                JOptionPane.showMessageDialog(this, "Status pembayaran berhasil diperbarui.");
                // Muat ulang data di tabel untuk menampilkan status baru
                // Cara termudah adalah dengan mensimulasikan klik pada tombol "Tampilkan"
                refreshLaporan();
            } else {
                JOptionPane.showMessageDialog(this, "Gagal memperbarui status pembayaran.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTandaiLunasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormLaporanBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormLaporanBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormLaporanBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormLaporanBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormLaporanBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnTampilkan;
    private javax.swing.JButton btnTandaiLunas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLaporan;
    private javax.swing.JTextField txtTanggalMulai;
    private javax.swing.JTextField txtTanggalSelesai;
    // End of variables declaration//GEN-END:variables
}
